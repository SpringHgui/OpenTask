/* tslint:disable */
/* eslint-disable */
/**
 * OpenTask.WebApi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  LisTaskLogsResponseBaseResponse,
} from '../models/index';
import {
    LisTaskLogsResponseBaseResponseFromJSON,
    LisTaskLogsResponseBaseResponseToJSON,
} from '../models/index';

export interface ListLogsRequest {
    taskId?: string;
    startTime?: Date;
    endTime?: Date;
    pageNumber?: number;
    pageSize?: number;
}

/**
 * 
 */
export class TaskLogApi extends runtime.BaseAPI {

    /**
     */
    async listLogsRaw(requestParameters: ListLogsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<LisTaskLogsResponseBaseResponse>> {
        const queryParameters: any = {};

        if (requestParameters['taskId'] != null) {
            queryParameters['TaskId'] = requestParameters['taskId'];
        }

        if (requestParameters['startTime'] != null) {
            queryParameters['StartTime'] = (requestParameters['startTime'] as any).toISOString();
        }

        if (requestParameters['endTime'] != null) {
            queryParameters['EndTime'] = (requestParameters['endTime'] as any).toISOString();
        }

        if (requestParameters['pageNumber'] != null) {
            queryParameters['PageNumber'] = requestParameters['pageNumber'];
        }

        if (requestParameters['pageSize'] != null) {
            queryParameters['PageSize'] = requestParameters['pageSize'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/api/TaskLog/ListLogs`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => LisTaskLogsResponseBaseResponseFromJSON(jsonValue));
    }

    /**
     */
    async listLogs(requestParameters: ListLogsRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<LisTaskLogsResponseBaseResponse> {
        const response = await this.listLogsRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
